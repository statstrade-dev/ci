name: Publish Web Main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_TEST_ID }}

# Controls when the workflow will run
on:
  repository_dispatch:
    types: [ui-changed]
  workflow_dispatch:

jobs:
    
  publish-web-main-vercel:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out lite
      - name: Checkout lite
        uses: actions/checkout@v4
        with:
          repository: statstrade-dev/statstrade-lite
          token: ${{ secrets.GH_TOKEN }} # Personal Access Token with repo write access

      - name: Show full commit SHA
        run: git rev-parse HEAD

      # 2. Install Node and Yarn
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'yarn'

      - name: Check Node version
        run: node -v

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Create .env.local from secret
        env:
          ENV_LOCAL: ${{ secrets.WEBAPP_ENV_TEST }}
        run: |
          # Write the content of the secret into .env.local
          printf '%s\n' "$ENV_LOCAL" > .env.local
        
      - name: Pull Vercel Environment
        run: yarn workspace @statstrade/web vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Web Main
        run: yarn workspace @statstrade/web vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Web Main 
        run: yarn workspace @statstrade/web vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
    
  publish-web-main-netlify:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out lite
      - name: Checkout lite
        uses: actions/checkout@v4
        with:
          repository: statstrade-dev/statstrade-lite
          token: ${{ secrets.GH_TOKEN }} # Personal Access Token with repo write access
          
      - name: Show full commit SHA
        run: git rev-parse HEAD

      # 2. Install Node and Yarn
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'yarn'

      - name: Check Node version
        run: node -v

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
#      - name: Create .env.local from secret
#        env:
#          ENV_LOCAL: ${{ secrets.WEBAPP_ENV_TEST }}
#        run: |
#          # Write the content of the secret into .env.local
#          printf '%s\n' "$ENV_LOCAL" > .env.local
        
      - name: Copy .env.local from projects/web/.env
        run: |
          # Write the content of the secret into .env.local
          cp projects/web/.env/.env.test projects/web/.env.local

      - name: Deploy Web Main to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEB_TEST_ID }}
        run: yarn netlify deploy --prod --filter @statstrade/web
